#!/usr/bin/env bash
#    _____ _     ____  ____  ____  ____  _____
#   /    // \   /  _ \/  __\/  _ \/  __\/__ __\
#   |  __\| |   | / \||  \/|| / \||  \/|  / \
#   | |   | |_/\| |-|||  __/| \_/||    /  | |
#   \_/   \____/\_/ \|\_/   \____/\_/\_\  \_/

# ---------------------------------------------------- #
# !!! NOTE THAT THIS SCRIPT SHOULD NOT BE SOURCED. !!! #
# ---------------------------------------------------- #

# last complete install: 2021.10.21

## checks
#-------------------------------------------------------------------------------

## pre-installation checks
if [ "$USER" == root ]; then
    echo
    echo "'python_install' should NOT be run as root, nor should it be run with sudo."
    echo "this script should be run [normally] by a user with sudo privileges."
    exit 1
fi

if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
    echo
    echo "'python_install' should NOT be sourced."
    exit 1
fi


## anaconda python
#-------------------------------------------------------------------------------

CONDAROOT="$HOME/.anaconda"

if [ ! -d "$CONDAROOT" ]; then
    printf "installing anaconda python at %s... " "$CONDAROOT"
    cd "$HOME" || exit 1
    curl -L https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh --output /tmp/miniconda.sh --silent
    bash /tmp/miniconda.sh -b -p "$CONDAROOT"
    rm /tmp/miniconda.sh
    echo "installed."
fi
__conda_setup="$("$CONDAROOT/bin/conda" 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$CONDAROOT/etc/profile.d/conda.sh" ]; then
        source "$CONDAROOT/etc/profile.d/conda.sh"
    else
        export PATH="$CONDAROOT/bin:$PATH"
    fi
fi
unset __conda_setup


## base environment
#-------------------------------------------------------------------------------

mamba install -y -n base -c conda-forge black nodejs\>=10 jupyterlab\>=3 jupyterhub \
  jupyterlab_code_formatter ipympl nbstripout pre-commit nbdime pynvim cython numpy \
  scipy sympy pandas pytables tensorflow scikit-learn matplotlib altair plotly      \
  pillow pandoc h5py tqdm line_profiler pylint pydocstyle mypy pep8 black flake8    \
  pyflakes isort yapf pytest twine jupyterlab_vim build pip wheel setuptools sphinx gdspy \
  shapely bump2version lxml grayskull bokeh jupyterlab-lsp pyright nbdev

conda run -n base --no-capture-output jupyter labextension install @arbennett/base16-nord
